---
// Carousel.astro
const { images = [], id } = Astro.props;
---

<style>
  .carousel-container {
    position: relative;
    width: 100%;
    max-width: 600px;
    overflow: hidden;
    border-radius: 12px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
  }

  .carousel-slide {
    display: flex;
    transition: transform 0.5s ease-in-out;
    height: 100%;
  }

  .carousel-slide img {
    width: 100%;
    height: 100%;
    flex: 0 0 100%;
    object-fit: cover;
  }

  .carousel-buttons {
    position: absolute;
    top: 50%;
    width: 100%;
    display: flex;
    justify-content: space-between;
    transform: translateY(-50%);
    padding: 0 1rem;
  }

  .carousel-buttons button {
    background: rgba(0, 0, 0, 0.4);
    color: white;
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    cursor: pointer;
    font-size: 1.2rem;
    transition: background 0.3s;
  }

  .carousel-buttons button:hover {
    background: rgba(0, 0, 0, 0.7);
  }
</style>

<div class="carousel-container" id={id} data-images={JSON.stringify(images)}>
  <div class="carousel-slide">
    {images.map((img: string, i: number) => (
      <img src={img} alt={`Slide ${i + 1}`} loading="lazy" />
    ))}
  </div>
  <div class="carousel-buttons">
    <button class="prev">‹</button>
    <button class="next">›</button>
  </div>
</div>

<script is:inline>
  window.addEventListener('DOMContentLoaded', () => {
    const carousels = document.querySelectorAll('.carousel-container');

    carousels.forEach(container => {
      const images = JSON.parse(container.getAttribute('data-images') || '[]');
      const slideContainer = container.querySelector('.carousel-slide');
      const prevBtn = container.querySelector('.prev');
      const nextBtn = container.querySelector('.next');
      let currentIndex = 0;
      let interval;

      // Function to update slide position
      function updateSlide() {
        slideContainer.style.transform = `translateX(-${currentIndex * 100}%)`;
      }

      // Button controls
      prevBtn?.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        updateSlide();
      });

      nextBtn?.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % images.length;
        updateSlide();
      });

      // Function to start autoplay
      function startCarousel() {
        interval = setInterval(() => {
          currentIndex = (currentIndex + 1) % images.length;
          updateSlide();
        }, 3000);
      }

      // Function to stop autoplay
      function stopCarousel() {
        clearInterval(interval);
      }

      // Start autoplay initially
      startCarousel();

      // ✅ Pause on hover
      container.addEventListener('mouseenter', stopCarousel);
      container.addEventListener('mouseleave', startCarousel);
    });
  });
</script>
